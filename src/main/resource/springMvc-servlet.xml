<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd

        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd

">
    <!-- 配置扫描的包 -->
    <context:component-scan base-package="core.*" />
    <context:component-scan base-package="business.*" />

    <!-- 注册HandlerMapper、HandlerAdapter两个映射类
          自动注册基于注解风格的处理器需要的
          DefaultAnnotationHandlerMapping、
          AnnotationMethodHandlerAdapter-->
    <mvc:annotation-driven />

    <!-- 访问静态资源
     当在web.xml 中DispatcherServlet使用<url-pattern>/</url-pattern> 映射时
     ，能映射静态资源（当Spring Web MVC框架没有处理请求对应的控制器时（如一些静态资源），
     转交给默认的Servlet来响应静态文件，否则报404找不到资源错误-->
    <!--<mvc:default-servlet-handler />-->

    <!-- 注册自定义的处理器拦截器
    <mvc:interceptors/>-->

    <mvc:resources mapping="/swagger/**" location="/swagger/" />

    <bean id="LoginInterceptor" class="core.interceptor.LoginInterceptor"/>
    <bean id="BaseInterceptor" class="core.interceptor.BaseInterceptor"/>

    <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="LoginInterceptor"/>
            </list>
        </property>
    </bean>



    <!-- HandlerMapping
    BeanNameUrlHandlerMapping：表示将请求的URL和Bean名字映射，
    如URL为 “上下文/hello”，
    则Spring配置文件必须有一个名字为“/hello”的Bean，上下文默认忽略。
    默认注册 见DispatcherServlet.properties
    -->
   <!-- <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>-->

    <!-- HandlerAdapter
    SimpleControllerHandlerAdapter：
    表示所有实现了org.springframework.web.servlet.mvc.Controller接口的Bean
    可以作为Spring Web MVC中的处理器。
    如果需要其他类型的处理器可以通过实现HadlerAdapter来解决。
    默认注册 见DispatcherServlet.properties
    -->
 <!--   <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>-->


    <!--   注册RequestMappingHandlerMapping、RequestMappingHandlerAdapter 替换
    <mvc:annotation-driven /> ？有区别 可能无法加载依赖包的bean
    -->
    <!-- HandlerMapping -->
    <!--<bean
        class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
    </bean>-->

   <!--  HandlerAdapter-->
    <!--<bean
        class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
    </bean>-->

    <!-- 视图解析器
     InternalResourceViewResolver：用于支持Servlet、JSP视图解析；
     viewClass：JstlView表示JSP模板页面需要使用JSTL标签库，classpath中必须包含jstl的相关jar包；
     prefix和suffix：查找视图页面的前缀和后缀（前缀[逻辑视图名]后缀），比如传进来的逻辑视图名为hello，
     则该该jsp视图页面应该存放在“WEB-INF/jsp/hello.jsp
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/view/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

   <!-- <bean name="/*.htm" class="org.springframework.web.servlet.mvc.UrlFilenameViewController">
        <property name="prefix" value="test"/>
        <property name="suffix" value="test"/>
    </bean>-->

    <!--Spring类型转换-->
   <!-- <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="cn.javass.chapter7.web.controller.support.
                             converter.StringToPhoneNumberConverter"/>
                <bean class="cn.javass.chapter7.web.controller.support.
                             converter.StringToDateConverter">
                    <constructor-arg value="yyyy-MM-dd"/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="webBindingInitializer" class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
        <property name="conversionService" ref="conversionService"/>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="webBindingInitializer" ref="webBindingInitializer"/>
    </bean>-->
    <!--Spring类型转换-->

    <bean name="/hello" class="business.controller.HelloWorldController">
       <!-- <property name="requireSession" value="true"></property>-->
       <!-- <property name="synchronizeOnSession" value="true"></property>-->
       <!--<property name="cacheSeconds" value="60"></property>-->
    </bean>

    <!--ExceptionResolver-->
   <!-- <bean id="simpleMappingExceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="error"></property>
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.RuntimeException">error</prop>
                <prop key="core.exception.SessionTimeoutException">index.jsp</prop>

            </props>
        </property>
        <property name="mappedHandlerClasses">
            <list>
                <value>org.springframework.web.servlet.mvc.Controller</value>
            </list>
        </property>
    </bean>-->
</beans>